{"ast":null,"code":"var _ProductServices;\nimport products from '../Data/products.json';\nexport class ProductServices {}\n_ProductServices = ProductServices;\nProductServices.GetProducts = () => {\n  const publicUrl = process.env.PUBLIC_URL;\n  try {\n    const allProducts = products.map(p => {\n      return {\n        \"id\": p.id,\n        \"name\": p.name,\n        \"description\": p.description,\n        \"price\": p.price,\n        \"imageUrl\": publicUrl + p.imageUrl\n      };\n    });\n    return allProducts;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n};\nProductServices.GetProductById = id => {\n  const product = _ProductServices.GetProducts().find(p => p.id === id);\n  if (product !== undefined) {\n    return product;\n  }\n  console.log('Incorrect Product Id');\n};","map":{"version":3,"names":["products","ProductServices","_ProductServices","GetProducts","publicUrl","process","env","PUBLIC_URL","allProducts","map","p","id","name","description","price","imageUrl","error","console","log","GetProductById","product","find","undefined"],"sources":["C:/Users/AVeryPrivatePerson/source/repos/MaryNG/source/Frontend/src/Services/ProductServices.tsx"],"sourcesContent":["import products from '../Data/products.json'\r\nimport Product from '../Models/Product';\r\n\r\nexport class ProductServices {\r\n\r\n    static GetProducts = (): Product[] => {\r\n        const publicUrl = process.env.PUBLIC_URL;\r\n        try {\r\n            const allProducts: Product[] = products.map(p => {\r\n                return {\r\n                    \"id\": p.id,\r\n                    \"name\": p.name,\r\n                    \"description\": p.description,\r\n                    \"price\": p.price,\r\n                    \"imageUrl\": publicUrl + p.imageUrl\r\n                };\r\n            })\r\n            return allProducts;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return [];\r\n        }\r\n    }\r\n\r\n    static GetProductById = (id: number): Product | undefined => {\r\n        const product: Product | undefined = this.GetProducts().find(p => p.id === id);\r\n        if (product !== undefined) {\r\n            return product;\r\n        }\r\n        console.log('Incorrect Product Id');\r\n    }\r\n\r\n}\r\n"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,uBAAuB;AAG5C,OAAO,MAAMC,eAAe,CAAC;AA6B5BC,gBAAA,GA7BYD,eAAe;AAAfA,eAAe,CAEjBE,WAAW,GAAG,MAAiB;EAClC,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU;EACxC,IAAI;IACA,MAAMC,WAAsB,GAAGR,QAAQ,CAACS,GAAG,CAACC,CAAC,IAAI;MAC7C,OAAO;QACH,IAAI,EAAEA,CAAC,CAACC,EAAE;QACV,MAAM,EAAED,CAAC,CAACE,IAAI;QACd,aAAa,EAAEF,CAAC,CAACG,WAAW;QAC5B,OAAO,EAAEH,CAAC,CAACI,KAAK;QAChB,UAAU,EAAEV,SAAS,GAAGM,CAAC,CAACK;MAC9B,CAAC;IACL,CAAC,CAAC;IACF,OAAOP,WAAW;EACtB,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,OAAO,EAAE;EACb;AACJ,CAAC;AAnBQf,eAAe,CAqBjBkB,cAAc,GAAIR,EAAU,IAA0B;EACzD,MAAMS,OAA4B,GAAGlB,gBAAA,CAAKC,WAAW,CAAC,CAAC,CAACkB,IAAI,CAACX,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKA,EAAE,CAAC;EAC9E,IAAIS,OAAO,KAAKE,SAAS,EAAE;IACvB,OAAOF,OAAO;EAClB;EACAH,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;AACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}