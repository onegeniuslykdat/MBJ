{"ast":null,"code":"\"use client\";\n\nimport _objectSpread from \"C:/Users/AVeryPrivatePerson/source/repos/MaryNG/MBJ_demo/source/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"C:/Users/AVeryPrivatePerson/source/repos/MaryNG/MBJ_demo/source/Frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"bsPrefix\", \"type\", \"size\", \"htmlSize\", \"id\", \"className\", \"isValid\", \"isInvalid\", \"plaintext\", \"readOnly\", \"as\"];\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      bsPrefix,\n      type,\n      size,\n      htmlSize,\n      id,\n      className,\n      isValid = false,\n      isInvalid = false,\n      plaintext,\n      readOnly,\n      // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n      as: Component = 'input'\n    } = _ref,\n    props = _objectWithoutProperties(_ref, _excluded);\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({}, props), {}, {\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, plaintext ? \"\".concat(bsPrefix, \"-plaintext\") : bsPrefix, size && \"\".concat(bsPrefix, \"-\").concat(size), type === 'color' && \"\".concat(bsPrefix, \"-color\"), isValid && 'is-valid', isInvalid && 'is-invalid')\n  }));\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","map":{"version":3,"names":["_objectSpread","_objectWithoutProperties","_excluded","classNames","React","useContext","warning","Feedback","FormContext","useBootstrapPrefix","jsx","_jsx","FormControl","forwardRef","_ref","ref","bsPrefix","type","size","htmlSize","id","className","isValid","isInvalid","plaintext","readOnly","as","Component","props","controlId","process","env","NODE_ENV","concat","displayName","Object","assign"],"sources":["C:/Users/AVeryPrivatePerson/source/repos/MaryNG/MBJ_demo/source/Frontend/node_modules/react-bootstrap/esm/FormControl.js"],"sourcesContent":["\"use client\";\r\n\r\nimport classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport warning from 'warning';\r\nimport Feedback from './Feedback';\r\nimport FormContext from './FormContext';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst FormControl = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  type,\r\n  size,\r\n  htmlSize,\r\n  id,\r\n  className,\r\n  isValid = false,\r\n  isInvalid = false,\r\n  plaintext,\r\n  readOnly,\r\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\r\n  as: Component = 'input',\r\n  ...props\r\n}, ref) => {\r\n  const {\r\n    controlId\r\n  } = useContext(FormContext);\r\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\r\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\r\n  return /*#__PURE__*/_jsx(Component, {\r\n    ...props,\r\n    type: type,\r\n    size: htmlSize,\r\n    ref: ref,\r\n    readOnly: readOnly,\r\n    id: id || controlId,\r\n    className: classNames(className, plaintext ? `${bsPrefix}-plaintext` : bsPrefix, size && `${bsPrefix}-${size}`, type === 'color' && `${bsPrefix}-color`, isValid && 'is-valid', isInvalid && 'is-invalid')\r\n  });\r\n});\r\nFormControl.displayName = 'FormControl';\r\nexport default Object.assign(FormControl, {\r\n  Feedback\r\n});"],"mappings":"AAAA,YAAY;;AAAC,OAAAA,aAAA;AAAA,OAAAC,wBAAA;AAAA,MAAAC,SAAA;AAEb,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,OAAO,MAAM,SAAS;AAC7B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,MAAMC,WAAW,GAAG,aAAaR,KAAK,CAACS,UAAU,CAAC,CAAAC,IAAA,EAc/CC,GAAG,KAAK;EAAA,IAdwC;MACjDC,QAAQ;MACRC,IAAI;MACJC,IAAI;MACJC,QAAQ;MACRC,EAAE;MACFC,SAAS;MACTC,OAAO,GAAG,KAAK;MACfC,SAAS,GAAG,KAAK;MACjBC,SAAS;MACTC,QAAQ;MACR;MACAC,EAAE,EAAEC,SAAS,GAAG;IAElB,CAAC,GAAAb,IAAA;IADIc,KAAK,GAAA3B,wBAAA,CAAAa,IAAA,EAAAZ,SAAA;EAER,MAAM;IACJ2B;EACF,CAAC,GAAGxB,UAAU,CAACG,WAAW,CAAC;EAC3BQ,QAAQ,GAAGP,kBAAkB,CAACO,QAAQ,EAAE,cAAc,CAAC;EACvDc,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG1B,OAAO,CAACuB,SAAS,IAAI,IAAI,IAAI,CAACT,EAAE,EAAE,mEAAmE,CAAC,GAAG,KAAK,CAAC;EACvJ,OAAO,aAAaT,IAAI,CAACgB,SAAS,EAAA3B,aAAA,CAAAA,aAAA,KAC7B4B,KAAK;IACRX,IAAI,EAAEA,IAAI;IACVC,IAAI,EAAEC,QAAQ;IACdJ,GAAG,EAAEA,GAAG;IACRU,QAAQ,EAAEA,QAAQ;IAClBL,EAAE,EAAEA,EAAE,IAAIS,SAAS;IACnBR,SAAS,EAAElB,UAAU,CAACkB,SAAS,EAAEG,SAAS,MAAAS,MAAA,CAAMjB,QAAQ,kBAAeA,QAAQ,EAAEE,IAAI,OAAAe,MAAA,CAAOjB,QAAQ,OAAAiB,MAAA,CAAIf,IAAI,CAAE,EAAED,IAAI,KAAK,OAAO,OAAAgB,MAAA,CAAOjB,QAAQ,WAAQ,EAAEM,OAAO,IAAI,UAAU,EAAEC,SAAS,IAAI,YAAY;EAAC,EAC3M,CAAC;AACJ,CAAC,CAAC;AACFX,WAAW,CAACsB,WAAW,GAAG,aAAa;AACvC,eAAeC,MAAM,CAACC,MAAM,CAACxB,WAAW,EAAE;EACxCL;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}