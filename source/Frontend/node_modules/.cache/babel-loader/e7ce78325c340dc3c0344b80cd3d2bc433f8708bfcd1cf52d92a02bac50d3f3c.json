{"ast":null,"code":"var _ProductServices;import products from'../Data/products.json';export class ProductServices{}_ProductServices=ProductServices;ProductServices.GetProducts=()=>{const publicUrl=process.env.PUBLIC_URL;try{const allProducts=products.map(p=>{return{\"id\":p.id,\"name\":p.name,\"description\":p.description,\"price\":p.price,\"imageUrl\":publicUrl+p.imageUrl};});return allProducts;}catch(error){console.log(error);return[];}};ProductServices.GetProductById=id=>{const product=_ProductServices.GetProducts().find(p=>p.id===id);if(product!==undefined){return product;}console.log('Incorrect Product Id');};","map":{"version":3,"names":["products","ProductServices","_ProductServices","GetProducts","publicUrl","process","env","PUBLIC_URL","allProducts","map","p","id","name","description","price","imageUrl","error","console","log","GetProductById","product","find","undefined"],"sources":["C:/Users/AVeryPrivatePerson/source/repos/MaryNG/MBJ_demo/source/Frontend/src/Services/ProductServices.tsx"],"sourcesContent":["import products from '../Data/products.json'\r\nimport Product from '../Models/Product';\r\n\r\nexport class ProductServices {\r\n\r\n    static GetProducts = (): Product[] => {\r\n        const publicUrl = process.env.PUBLIC_URL;\r\n        try {\r\n            const allProducts: Product[] = products.map(p => {\r\n                return {\r\n                    \"id\": p.id,\r\n                    \"name\": p.name,\r\n                    \"description\": p.description,\r\n                    \"price\": p.price,\r\n                    \"imageUrl\": publicUrl + p.imageUrl\r\n                };\r\n            })\r\n            return allProducts;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return [];\r\n        }\r\n    }\r\n\r\n    static GetProductById = (id: number): Product | undefined => {\r\n        const product: Product | undefined = this.GetProducts().find(p => p.id === id);\r\n        if (product !== undefined) {\r\n            return product;\r\n        }\r\n        console.log('Incorrect Product Id');\r\n    }\r\n\r\n}\r\n"],"mappings":"qBAAA,MAAO,CAAAA,QAAQ,KAAM,uBAAuB,CAG5C,MAAO,MAAM,CAAAC,eAAgB,EA6B5BC,gBAAA,CA7BYD,eAAe,CAAfA,eAAe,CAEjBE,WAAW,CAAG,IAAiB,CAClC,KAAM,CAAAC,SAAS,CAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,CACxC,GAAI,CACA,KAAM,CAAAC,WAAsB,CAAGR,QAAQ,CAACS,GAAG,CAACC,CAAC,EAAI,CAC7C,MAAO,CACH,IAAI,CAAEA,CAAC,CAACC,EAAE,CACV,MAAM,CAAED,CAAC,CAACE,IAAI,CACd,aAAa,CAAEF,CAAC,CAACG,WAAW,CAC5B,OAAO,CAAEH,CAAC,CAACI,KAAK,CAChB,UAAU,CAAEV,SAAS,CAAGM,CAAC,CAACK,QAC9B,CAAC,CACL,CAAC,CAAC,CACF,MAAO,CAAAP,WAAW,CACtB,CAAE,MAAOQ,KAAK,CAAE,CACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAClB,MAAO,EAAE,CACb,CACJ,CAAC,CAnBQf,eAAe,CAqBjBkB,cAAc,CAAIR,EAAU,EAA0B,CACzD,KAAM,CAAAS,OAA4B,CAAGlB,gBAAA,CAAKC,WAAW,CAAC,CAAC,CAACkB,IAAI,CAACX,CAAC,EAAIA,CAAC,CAACC,EAAE,GAAKA,EAAE,CAAC,CAC9E,GAAIS,OAAO,GAAKE,SAAS,CAAE,CACvB,MAAO,CAAAF,OAAO,CAClB,CACAH,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC,CACvC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}